// -*- idl -*- ///////////////////////////////////////////////////////////////
//
// This file is part of Miro (The Middleware for Robots)
// Copyright (C) 2013
// Department of Neural Information Processing, University of Ulm
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as published
// by the Free Software Foundation; either version 2, or (at your option)
// any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public License
// along with this program; if not, write to the Free Software Foundation,
// Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
//
#ifndef dynamic_corba_CORBA_Types_idl
#define dynamic_corba_CORBA_Types_idl

#include <tao/Typecode_types.pidl>

module XMP
{
  enum Bar { ONE, TWO, THREE };
  typedef sequence<string> SSeq;

  interface Blub{

  };

  typedef double DoubleV4[4];

  struct Foo {
    long a;
    float b;
    Bar c;
    SSeq d;
    DoubleV4 e;
    Blub ref;
  };

  enum ParamDirection { PARAM_IN, PARAM_OUT, PARAM_INOUT };
  struct Parameter 
  {
    string name;
    ParamDirection direction;
    any value;
  };

  typedef sequence<Parameter> ParameterSequence;
  typedef sequence<CORBA::TypeCode> TypeCodeSequence;

  struct GenericCmd
  {
    string objectName; // just for beauty
    Object reference;
    string methodName;
    ParameterSequence parameters;
    CORBA::TypeCode returnType;
    TypeCodeSequence exceptions;

    any returnValue;
  };

  // replication of basic/Basic.idl exception
  exception EFoo
  {
    string what;
  };
};

#endif // dynamic_corba_CORBA_Types_idl
